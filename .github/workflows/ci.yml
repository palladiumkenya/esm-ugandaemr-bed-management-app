name: Kenyaemr CI

on:
  workflow_dispatch: # enables the workflow to be triggered manually
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

env:
  ESM_NAME: "@kenyaemr/esm-bed-management-app"
  JS_NAME: "esm-kenyaemr-bed-management-app.js"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TURBO_API: 'http://127.0.0.1:9080'
      TURBO_TOKEN: ${{ secrets.TURBO_SERVER_TOKEN }}
      TURBO_TEAM: ${{ github.repository_owner }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      # - name: Setup local cache server for Turborepo
      #   uses: felixmosh/turborepo-gh-artifacts@v2
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - run: yarn verify
      - run: yarn turbo run build --filter='...[./*]' --color --concurrency=5

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist

  pre_release:
    runs-on: ubuntu-latest
    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --immutable

      # - name: Setup local cache server for Turborepo
      #   uses: felixmosh/turborepo-gh-artifacts@v2
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     server-token: ${{ secrets.TURBO_SERVER_TOKEN }}

      - name: Version
        run: yarn version "$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}"

      - name: Build
        run: yarn turbo run build --cache-dir=".turbo" --concurrency=5 --no-daemon

      - run: git config user.email "<>" && git config user.name "UgandaEMR CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify

      - name: Pre-release
        run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" && yarn npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            dist

  Trigger_server_build:
    runs-on: ubuntu-latest
    needs: pre_release
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Invoke workflow without inputs. Don't wait for result
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: KenyaEMR CI
          repo: palladiumkenya/openmrs-config-kenyaemr
          token: ${{ secrets.PERSONAL_TOKENS }}
          wait-for-completion: false

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          registry-url: 'https://registry.npmjs.org'
      - run: yarn install --immutable
      - run: yarn config set npmAuthToken "${NODE_AUTH_TOKEN}" &&  yarn npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
